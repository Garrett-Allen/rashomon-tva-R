policies_w_pools <- cbind(policies, cc$values())
as.data.frame(policies)
as.data.frame(policies_w_pools)
x <- (policies_w_pools)
View(x)
?cbind
policies_w_pools <- cbind(policies, pools = cc$values())
x <- (policies_w_pools)
list(c(2,1)) = list(c(2,1))
list(c(2,1)) == list(c(2,1))
c(2,1) == c(2,1)
sum(c(2,1) == c(2,1))
(c(2,1) == c(2,1)) == TRUE
all((c(2,1) == c(2,1)))
cc$keys()
cc$keys() = policy_list
policy_list[1]
policy_list[[1]]
data <- data.frame(arm1 = c(1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3),
arm2 = c(1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3),
value = runif(27))
#searching rashomon set
extract_pools <- function(policy_list, pool_list){
}
policy_means <- function(data, ...){
data %>%
group_by(...) %>%
count()
}
<pool_means <- function(data, policy_list, pools_list){
policy_list <- create_policies(3,arms = 2)
sigma <- matrix(c(1,1,1,1), ncol = 2, nrow = 2)
edge_list <- lattice_edges(sigma, policy_list)
new_sigma <- matrix(c(0,1,1,1), ncol = 2, nrow = 2)
pruned_edge_list <- prune_edges(new_sigma,edge_list,policy_list)
cc <- connected_components(length(pruned_edge_list),pruned_edge_list)
cc$as_list()
cc <- connected_components(length(pruned_edge_list),pruned_edge_list,policy_list)
cc$as_list()
library(rashomontva)
library(rashomontva)
library(tidyverse)
library(collections)
library(data.table)
warnings()
policy_list <- create_policies(3,arms = 2)
sigma <- matrix(c(1,1,1,1), ncol = 2, nrow = 2)
edge_list <- lattice_edges(sigma, policy_list)
new_sigma <- matrix(c(0,1,1,1), ncol = 2, nrow = 2)
pruned_edge_list <- prune_edges(new_sigma,edge_list,policy_list)
cc <- connected_components(length(pruned_edge_list),pruned_edge_list,policy_list)
cc$as_list()
cc.get(policy_list[[1]])
cc.$get(policy_list[[1]])
cc$get(policy_list[[1]])
data %>%
mutate(pool = list(V1,V2))
data %>%
mutate(pool = list(arm1,arm2))
data %>%
mutate(pool = list(list(arm1,arm2)))
data %>%
mutate(pool = list(c(arm1,arm2)))
data %>%
rowwise() %>%
mutate(pool = list(c(arm1,arm2)))
length(data)
mutate(pool = list(c(1:(length(data) - 1)))
data %>%
data %>%
rowwise() %>%
mutate(pool = list(c(1:(length(data) - 1))))
data %>%
rowwise() %>%
mutate(pool = cc$get(list(c(1:(length(data) - 1)))))
data %>%
rowwise() %>%
mutate(pool = list(c(1:(length(data) - 1)))) %>%
mutate(pool = cc$get(pool))
data %>%
rowwise() %>%
mutate(pool = list(c(1:(length(data) - 1)))) %>%
mutate(pool = cc$get(pool[[1]]))
data %>%
rowwise() %>%
mutate(pool = unlist(list(c(1:(length(data) - 1))))) %>%
mutate(pool = cc$get(pool[[1]]))
data %>%
mutate(list(c(arm1,arm2)))
data %>%
rowwise()
data %>%
rowwise()
mutate(list(c(arm1,arm2 %>% )))
data %>%
rowwise() %>%
mutate(list(c(arm1,arm2 %>% )))
library(purrr)
?map2
mutate(together = map(unname(.),c)
data %>%
data %>%
mutate(together = map(unname(.),c))
data %>%
mutate(together = pmap(unname(.),c))
data %>%
mutate(together = pmap(unname(.[-value]),c))
?unname
data %>%
mutate(together = pmap(unname(.[-values]),c))
data %>%
mutate(together = pmap(unname(.[-value]),c))
data[-vaue]
data[-value]
data
data[-"value"]
data["value"]
data[!"value"]
data %>%
mutate(together = pmap(unname(select(.,-value)),c))
data %>%
mutate(together = pmap(unname(select(.,-value)),c)) %>%
mutate(pool = cc$get(together))
data %>%
mutate(together = pmap(unname(select(.,-value)),c)) %>%
mutate(pool = cc$get(together[[1]]))
data %>%
mutate(together = pmap(unname(select(.,-value)),c)) %>%
mutate(pool = cc$get(unlist(together)))
data
x <- data %>%
mutate(together = pmap(unname(select(.,-value)),c))
x
cc
cc$keys()
cc$get(c(1,2))
cc$get(c(Val1 = 1,Val2 = 2))
policy_list[[1]]
cc$get(c(Var1 = 1,Var2 = 2))
c(Var1 = 1, Var2 = 2)
c(Var1 = 1, Var2 = 1)
cc$get(c(Var1 = 1,Var2 = 1))
policy_list[[1]]
cc$get(policy_list[[1]])
str(policy_list[[1]])
str(c(Var1 = 1, Var2 = 1))
cc$get(list(Var1 = 1,Var2 = 1))
policy_list[[1]]
unname(policy_list[[1]])
library(rashomontva)
library(rashomontva)
library(tidyverse)
library(collections)
library(data.table)
policy_list <- create_policies(3,arms = 2)
sigma <- matrix(c(1,1,1,1), ncol = 2, nrow = 2)
edge_list <- lattice_edges(sigma, policy_list)
new_sigma <- matrix(c(0,1,1,1), ncol = 2, nrow = 2)
pruned_edge_list <- prune_edges(new_sigma,edge_list,policy_list)
cc <- connected_components(length(pruned_edge_list),pruned_edge_list,policy_list)
cc$as_list()
cc$get(c(1,1))
str(c(1,1))
policy_list[[1]]
unname(policy_list[[1]])
str(unname(policy_list[[1]]))
str(c(1,1))
str(unname(policy_list[[1]]))
x$together[1]
str(x$together[1])
str(x$together[[1]])
str(unname(policy_list[[1]]))
as.numeric(unname(policy_list[[1]])))
as.numeric(unname(policy_list[[1]]))
str(as.numeric(unname(policy_list[[1]])))
library(rashomontva)
library(rashomontva)
library(tidyverse)
library(collections)
library(data.table)
policy_list <- create_policies(3,arms = 2)
sigma <- matrix(c(1,1,1,1), ncol = 2, nrow = 2)
edge_list <- lattice_edges(sigma, policy_list)
new_sigma <- matrix(c(0,1,1,1), ncol = 2, nrow = 2)
pruned_edge_list <- prune_edges(new_sigma,edge_list,policy_list)
cc <- connected_components(length(pruned_edge_list),pruned_edge_list,policy_list)
cc$as_list()
cc$get(c(1,1))
x <- data %>%
mutate(together = pmap(unname(select(.,-value)),c)) %>%
mutate(pools = cc$get(together[[1]]))
x
pools$together
x$together
x$together[1]
x$together[[1]]
x$together
lapply(x$together,unlist())
x <- data %>%
mutate(together = pmap(unname(select(.,-value)),c)) %>%
mutate(pools = cc$get(unlist(together)))
x <- data %>%
mutate(together = pmap(unname(select(.,-value)),c)) %>%
rowwise() %>%
mutate(pools = cc$get(unlist(together)))
x
policy_means <- function(data, ..., value){
#convert to data.table
data %>%
group_by(...) %>%
summarize(mean = mean({{value}}),
n = n())
}
pool_means <- function(data,policy_list, pools_list, value){
pool_map = pools_list$as_list()
data %>%
mutate(together = pmap(unname(select(.,-{{value}})),c)) %>%
rowwise() %>%
mutate(pools = cc$get(unlist(together))) %>%
select(-together) %>%
group_by(pools) %>%
summarize(mean = mean({{value}}),
n = n())
}
pool_means(data, policy_list, cc, value)
pool_means <- function(data,policy_list, pools_dict, value){
data %>%
mutate(together = purrr::pmap(unname(dplyr::select(.,-{{value}})),c)) %>%
dplyr::rowwise() %>%
mutate(pools = pools_dict$get(unlist(together))) %>%
select(-together) %>%
dply::group_by(pools) %>%
dplyr::summarize(mean = mean({{value}}),
n = n())
}
pool_means(data, policy_list, cc, value)
pool_means <- function(data,policy_list, pools_dict, value){
data %>%
mutate(together = purrr::pmap(unname(dplyr::select(.,-{{value}})),c)) %>%
dplyr::rowwise() %>%
mutate(pools = pools_dict$get(unlist(together))) %>%
select(-together) %>%
dplyr::group_by(pools) %>%
dplyr::summarize(mean = mean({{value}}),
n = n())
}
pool_means(data, policy_list, cc, value)
sigma[1,1:]
sigma[1,j:length(sigma)]
sigma[1,1:length(sigma)]
ncol(sigma)
sigma[1,1:ncol(sigma)]
sigma[1,2:ncol(sigma)]
partition_sigma <- function(i, j, sigma) {
new_sigma = sigma
new_sigma[i, j:ncol(new_sigma)] = 0
new_sigma[is.na(sigma)] = NA
}
partition_sigma(1,1, sigma)
partition_sigma <- function(i, j, sigma) {
new_sigma = sigma
new_sigma[i, j:ncol(new_sigma)] = 0
new_sigma[is.na(sigma)] = NA
new_sigma
}
partition_sigma(1,1, sigma)
sigma <- matrix(c(1,1,1,NA), ncol = 2, nrow = 2)
sigma
partition_sigma <- function(i, j, sigma) {
new_sigma = sigma
new_sigma[i, j:ncol(new_sigma)] = 0
new_sigma[is.na(sigma)] = NA
new_sigma
}
partition_sigma(1,1, sigma)
pool_to_data(data, policy_list, cc, value)
pools_to_data <- function(data,policy_list, pools_dict, value){
data %>%
mutate(together = purrr::pmap(unname(dplyr::select(.,-{{value}})),c)) %>%
dplyr::rowwise() %>%
mutate(pools = pools_dict$get(unlist(together))) %>%
select(-together)
}
pool_to_data(data, policy_list, cc, value)
pools_to_data(data, policy_list, cc, value)
pools_to_data <- function(data,policy_list, pools_dict, value){
data %>%
mutate(together = purrr::pmap(unname(dplyr::select(.,-{{value}})),c)) %>%
dplyr::rowwise() %>%
mutate(pools = pools_dict$get(unlist(together))) %>%
select(-together) %>%
ungroup()
}
pools_to_data(data, policy_list, cc, value)
pools_to_data(data, policy_list, cc, value) %>%
group_by(pools) %>%
mutate(pool_mean = mean(value))
pools_to_data(data, policy_list, cc, value) %>%
group_by(pools) %>%
mutate(pool_mean = mean(value)) %>%
ungroup() %>%
summarize(mse = sum((value - pool_mean)^2))
x<- pools_to_data(data, policy_list, cc, value)
x
x %>%
group_by(arm1,arm2,pools) %>%
summarize(mean = mean(value),
pool = mean(pool))
x %>%
group_by(arm1,arm2,pools) %>%
summarize(mean = mean(value),
pool = mean(pools))
x %>%
group_by(arm1,arm2,pools) %>%
summarize(mean = mean(value),
pool = mean(pools)) %>%
ungroup() %>%
group_by(pool) %>%
summarize(mean = mean(value))
x %>%
group_by(arm1,arm2,pools) %>%
summarize(mean = mean(value),
pool = mean(pools)) %>%
ungroup() %>%
group_by(pool) %>%
summarize(mean = mean(mean))
pools_to_data(data, policy_list, cc, value)
pools_to_data(data, policy_list, cc, value)  %>%
group_by(pools) %>%
mutate(pool_mean = mean(value)) %>%
ungroup() %>%
summarize(mse = sum((value - pool_mean)^2))
pools_to_data(data, policy_list, cc, value)  %>%
group_by(pools) %>%
mutate(pool_mean = mean(value))
x %>%
group_by(arm1,arm2,pools) %>%
summarize(mean = mean(value),
pool = mean(pools)) %>%
ungroup() %>%
group_by(pool) %>%
summarize(mean = mean(mean))
pools_to_data(data, policy_list, cc, value)  %>%
group_by(pools) %>%
mutate(pool_mean = mean(value))
%>%
? %>%
?%>%
library(rashomontva)
library(rashomontva)
library(tidyverse)
library(collections)
library(data.table)
library(rashomontva)
library(rashomontva)
library(tidyverse)
library(collections)
library(data.table)
rashomontva::create_policies_from_data(data, arm1, arm2)
rashomontva::assign_policy_label(data, arm1, arm2)
cur_group_id()
data %>%
group_by() %>%
mutate(x = cur_group_id())
data %>%
group_by(arm1,arm2) %>%
mutate(x = cur_group_id())
library(rashomontva)
library(rashomontva)
library(tidyverse)
library(collections)
library(data.table)
rashomontva::assign_policy_label(data, arm1, arm2)
rashomontva::create_policies_from_data(data, arm1, arm2)
rashomontva::create_policies_from_data(data, arm1, arm2)
rashomontva::assign_policy_label(data, arm1, arm2)
?cur_group_id()
library(rashomontva)
library(rashomontva)
library(tidyverse)
library(collections)
library(data.table)
library(rashomontva)
library(tidyverse)
library(collections)
library(data.table)
rashomontva::create_policies_from_data(data, arm1, arm2)
library(rashomontva)
library(rashomontva)
library(tidyverse)
library(collections)
library(data.table)
rashomontva::create_policies_from_data(data, arm1, arm2)
rashomontva::assign_policy_label(data, arm1, arm2)
rashomontva::assign_policy_label(data, arm1, arm2)
rashomontva::assign_policy_label(data, arm1, arm2)
assign_policy_label(data,arm1,arm2)
(6/13 - 7 / 13)*(13 / 20) + (4 / 7 - 3 / 7) * (7/20)
policy_list <- rashomontva::create_policies_from_data(data, arm1, arm2)
sigma <- matrix(c(1,1,1,NA), ncol = 2, nrow = 2)
sigma <- matrix(c(1,1,1,1), ncol = 2, nrow = 2)
edge_list <- lattice_edges(sigma, policy_list)
new_sigma <- matrix(c(0,1,1,1), ncol = 2, nrow = 2)
pruned_edge_list <- prune_edges(new_sigma,edge_list,policy_list)
cc <- connected_components(length(pruned_edge_list),pruned_edge_list,policy_list)
cc$as_list()
data <_ assign_policy_label(data,arm1,arm2)
data <- assign_policy_label(data,arm1,arm2)
data
data
library(rashomontva)
data <- assign_policy_label(data,arm1,arm2)
policy_list <- rashomontva::create_policies_from_data(data, arm1, arm2)
sigma <- matrix(c(1,1,1,1), ncol = 2, nrow = 2)
edge_list <- lattice_edges(sigma, policy_list)
new_sigma <- matrix(c(0,1,1,1), ncol = 2, nrow = 2)
pruned_edge_list <- prune_edges(new_sigma,edge_list,policy_list)
cc <- connected_components(length(pruned_edge_list),pruned_edge_list,policy_list)
cc$as_list()
data %>%
group_by(arm1,arm2) %>%
mutate(x = cur_group_id())
data
data %>%
mutate(pool = cc$get(policy_label))
cc$get(1)
cc$as_list()
data %>%
mutate(pool = cc$get(paste0(policy_label)))
cc$get("1")
cc$keys()
cc$keys()[[1]]
str(cc$keys()[[1]])
str(1)
mutate(pool = cc$get(as.integer(policy_label))
mutate(pool = cc$get(as.integer(policy_label))
data %>%
mutate(pool = cc$get(as.integer(policy_label)))
data$policy_label[1]
str(data$policy_label[1])
str(cc$keys()[[1]])
data %>%
rowwise() %>%
mutate(pool = cc$get(as.integer(policy_label)))
data %>%
rowwise() %>%
mutate(pool = cc$get(policy_label))
data %>%
mutate(pool = cc$get(policy_label))
data %>%
rowwise() %>%
mutate(pool = cc$get(policy_label))
pools_to_data <- function(data,policy_list, pools_dict, value){
data %>%
rowwise() %>%
mutate(pool = cc$get(policy_label))
}
policy_means(data, value)
policy_means(data, arm1, arm2, value)
policy_means(data, value, arm1, arm2)
policy_means(data, value = value, arm1, arm2)
policy_means(data, value = value, arm1, arm2)
?summarize
policy_means <- function(data, value, ...){
#convert to data.table
data %>%
group_by(...) %>%
summarize(mean = mean({{value}}),
.groups = NULL)
}
policy_means(data, value = value, arm1, arm2)
policy_means <- function(data, value, ...){
#convert to data.table
data %>%
group_by(...) %>%
summarize(mean = mean({{value}}),
.groups = "drop")
}
policy_means(data, value = value, arm1, arm2)
data
policy_means <- function(data, value, ...){
#convert to data.table
data %>%
group_by(...) %>%
summarize(mean = mean({{value}}),
.groups = "drop",
policy_label = policy_label)
}
policy_means(data, value = value, arm1, arm2)
policy_means <- function(data, value, ...){
#convert to data.table
data %>%
group_by(...) %>%
summarize(mean = mean({{value}}),
.groups = "drop",
policy_label = policy_label[1])
}
policy_means(data, value = value, arm1, arm2)
#note: data argument here must be output from policy_means
pool_means <- function(data, value, pool){
data %>%
group_by({{pool}}) %>%
summarize(mean_pool = mean({{value}}))
}
policy_means(data, value, arm1, arm2)
M <- policy_means(data, value, arm1, arm2)
M <- pools_to_data(M, policy_list, cc, value)
M
M <- pool_means(M, value, pool)
M
M <- pool_means(M, mean, pool)
M
